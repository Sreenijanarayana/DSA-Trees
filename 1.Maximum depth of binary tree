----------------------Recursive----------------------------
class Solution {
    // Function to find the height of a binary tree.
    int height(Node node) {
        // code here
        if(node==null){
            return -1;
        }
        int lHeight = height(node.left);
        int rHeight = height(node.right);
        return Math.max(lHeight,rHeight)+1;
    }
}

--------------------------Iteravtive-------------------------
class Solution {
    // Function to find the height of a binary tree.
    int height(Node node) {
        // code here
        Queue<Node> q = new LinkedList<>();
        int depth = 0;
        q.add(node);
        while(!q.isEmpty()){
        int size = q.size();
        for(int i=0;i<size;i++){
            Node n = q.poll();
            if(n.left!=null)q.add(n.left);
            if(n.right!=null)q.add(n.right);
            
        }
        depth++;
        }
        return depth-1;
    }
}

